{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\n\nvar StockMarket = function (props) {\n  var widgetProps = props.widgetProps,\n      widgetPropsAny = props.widgetPropsAny;\n  var ref = React.createRef();\n  React.useEffect(function () {\n    var refValue;\n\n    if (ref.current) {\n      var script = document.createElement(\"script\");\n      script.src = \"https://s3.tradingview.com/external-embedding/\" + \"embed-widget-hotlists.js\";\n      script.async = true;\n      script.type = \"text/javascript\";\n      script.innerHTML = JSON.stringify(__assign(__assign({\n        \"colorTheme\": \"dark\",\n        \"dateRange\": \"12M\",\n        \"exchange\": \"US\",\n        \"showChart\": true,\n        \"locale\": \"en\",\n        \"largeChartUrl\": \"\",\n        \"isTransparent\": false,\n        \"showSymbolLogo\": false,\n        \"width\": \"400\",\n        \"height\": \"600\",\n        \"plotLineColorGrowing\": \"rgba(25, 118, 210, 1)\",\n        \"plotLineColorFalling\": \"rgba(25, 118, 210, 1)\",\n        \"gridLineColor\": \"rgba(42, 46, 57, 1)\",\n        \"scaleFontColor\": \"rgba(120, 123, 134, 1)\",\n        \"belowLineFillColorGrowing\": \"rgba(33, 150, 243, 0.12)\",\n        \"belowLineFillColorFalling\": \"rgba(33, 150, 243, 0.12)\",\n        \"symbolActiveColor\": \"rgba(33, 150, 243, 0.12)\"\n      }, widgetProps), widgetPropsAny));\n      ref.current.appendChild(script);\n      refValue = ref.current;\n    }\n\n    return function () {\n      if (refValue) {\n        while (refValue.firstChild) {\n          refValue.removeChild(refValue.firstChild);\n        }\n      }\n    };\n  }, [ref, widgetProps, widgetPropsAny]);\n  return _jsx(\"div\", {\n    ref: ref\n  }, void 0);\n};\n\nexport default StockMarket;","map":{"version":3,"sources":["../../src/components/StockMarket.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;;AA6BA,IAAM,WAAW,GAAG,UAAC,KAAD,EAAwB;AAClC,MAAA,WAAW,GAAqB,KAAK,CAA1B,WAAX;AAAA,MAAa,cAAc,GAAK,KAAK,CAAV,cAA3B;AAER,MAAM,GAAG,GAAqC,KAAK,CAAC,SAAN,EAA9C;AAEA,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAA;AACd,QAAI,QAAJ;;AAEA,QAAI,GAAG,CAAC,OAAR,EAAiB;AACf,UAAM,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAf;AACA,MAAA,MAAM,CAAC,GAAP,GAAa,mDACG,0BADhB;AAGA,MAAA,MAAM,CAAC,KAAP,GAAe,IAAf;AACA,MAAA,MAAM,CAAC,IAAP,GAAc,iBAAd;AACA,MAAA,MAAM,CAAC,SAAP,GAAmB,IAAI,CAAC,SAAL,CAAc,QAAA,CAAA,QAAA,CAAA;AAC/B,sBAAc,MADiB;AAE/B,qBAAa,KAFkB;AAG/B,oBAAY,IAHmB;AAI/B,qBAAa,IAJkB;AAK/B,kBAAU,IALqB;AAM/B,yBAAiB,EANc;AAO/B,yBAAiB,KAPc;AAQ/B,0BAAkB,KARa;AAS/B,iBAAS,KATsB;AAU/B,kBAAU,KAVqB;AAW/B,gCAAwB,uBAXO;AAY/B,gCAAwB,uBAZO;AAa/B,yBAAiB,qBAbc;AAc/B,0BAAkB,wBAda;AAe/B,qCAA6B,0BAfE;AAgB/B,qCAA6B,0BAhBE;AAiB/B,6BAAqB;AAjBU,OAAA,EAkB5B,WAlB4B,CAAA,EAmB5B,cAnB4B,CAAd,CAAnB;AAsBA,MAAA,GAAG,CAAC,OAAJ,CAAY,WAAZ,CAAwB,MAAxB;AACA,MAAA,QAAQ,GAAG,GAAG,CAAC,OAAf;AACD;;AAED,WAAO,YAAA;AACL,UAAI,QAAJ,EAAc;AACZ,eAAO,QAAQ,CAAC,UAAhB,EAA4B;AAC1B,UAAA,QAAQ,CAAC,WAAT,CAAqB,QAAQ,CAAC,UAA9B;AACD;AACF;AACF,KAND;AAOD,GA3CD,EA2CG,CAAC,GAAD,EAAM,WAAN,EAAmB,cAAnB,CA3CH;AA6CA,SAAO,IAAA,CAAA,KAAA,EAAA;AAAK,IAAA,GAAG,EAAE;AAAV,GAAA,EAAa,KAAA,CAAb,CAAP;AACD,CAnDD;;AAqDA,eAAe,WAAf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport React from \"react\";\r\nvar StockMarket = function (props) {\r\n    var widgetProps = props.widgetProps, widgetPropsAny = props.widgetPropsAny;\r\n    var ref = React.createRef();\r\n    React.useEffect(function () {\r\n        var refValue;\r\n        if (ref.current) {\r\n            var script = document.createElement(\"script\");\r\n            script.src = \"https://s3.tradingview.com/external-embedding/\"\r\n                + \"embed-widget-hotlists.js\";\r\n            script.async = true;\r\n            script.type = \"text/javascript\";\r\n            script.innerHTML = JSON.stringify(__assign(__assign({ \"colorTheme\": \"dark\", \"dateRange\": \"12M\", \"exchange\": \"US\", \"showChart\": true, \"locale\": \"en\", \"largeChartUrl\": \"\", \"isTransparent\": false, \"showSymbolLogo\": false, \"width\": \"400\", \"height\": \"600\", \"plotLineColorGrowing\": \"rgba(25, 118, 210, 1)\", \"plotLineColorFalling\": \"rgba(25, 118, 210, 1)\", \"gridLineColor\": \"rgba(42, 46, 57, 1)\", \"scaleFontColor\": \"rgba(120, 123, 134, 1)\", \"belowLineFillColorGrowing\": \"rgba(33, 150, 243, 0.12)\", \"belowLineFillColorFalling\": \"rgba(33, 150, 243, 0.12)\", \"symbolActiveColor\": \"rgba(33, 150, 243, 0.12)\" }, widgetProps), widgetPropsAny));\r\n            ref.current.appendChild(script);\r\n            refValue = ref.current;\r\n        }\r\n        return function () {\r\n            if (refValue) {\r\n                while (refValue.firstChild) {\r\n                    refValue.removeChild(refValue.firstChild);\r\n                }\r\n            }\r\n        };\r\n    }, [ref, widgetProps, widgetPropsAny]);\r\n    return _jsx(\"div\", { ref: ref }, void 0);\r\n};\r\nexport default StockMarket;\r\n//# sourceMappingURL=StockMarket.js.map"]},"metadata":{},"sourceType":"module"}