{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\n\nvar CompanyProfile = function (props) {\n  var widgetProps = props.widgetProps,\n      widgetPropsAny = props.widgetPropsAny;\n  var ref = React.createRef();\n  React.useEffect(function () {\n    var refValue;\n\n    if (ref.current) {\n      var script = document.createElement(\"script\");\n      script.src = \"https://s3.tradingview.com/external-embedding/\" + \"embed-widget-symbol-profile.js\";\n      script.async = true;\n      script.type = \"text/javascript\";\n      script.innerHTML = JSON.stringify(__assign(__assign({\n        \"symbol\": \"NASDAQ:NVDA\",\n        \"width\": 480,\n        \"height\": 650,\n        \"colorTheme\": \"dark\",\n        \"isTransparent\": false,\n        \"locale\": \"en\"\n      }, widgetProps), widgetPropsAny));\n      ref.current.appendChild(script);\n      refValue = ref.current;\n    }\n\n    return function () {\n      if (refValue) {\n        while (refValue.firstChild) {\n          refValue.removeChild(refValue.firstChild);\n        }\n      }\n    };\n  }, [ref, widgetProps, widgetPropsAny]);\n  return _jsx(\"div\", {\n    ref: ref\n  }, void 0);\n};\n\nexport default CompanyProfile;","map":{"version":3,"sources":["../../src/components/CompanyProfile.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;;AAkBA,IAAM,cAAc,GAAG,UAAC,KAAD,EAA2B;AACxC,MAAA,WAAW,GAAqB,KAAK,CAA1B,WAAX;AAAA,MAAa,cAAc,GAAK,KAAK,CAAV,cAA3B;AAER,MAAM,GAAG,GAAqC,KAAK,CAAC,SAAN,EAA9C;AAEA,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAA;AACd,QAAI,QAAJ;;AAEA,QAAI,GAAG,CAAC,OAAR,EAAiB;AACf,UAAM,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAf;AACA,MAAA,MAAM,CAAC,GAAP,GAAa,mDACG,gCADhB;AAGA,MAAA,MAAM,CAAC,KAAP,GAAe,IAAf;AACA,MAAA,MAAM,CAAC,IAAP,GAAc,iBAAd;AACA,MAAA,MAAM,CAAC,SAAP,GAAmB,IAAI,CAAC,SAAL,CAAc,QAAA,CAAA,QAAA,CAAA;AAC/B,kBAAU,aADqB;AAE/B,iBAAS,GAFsB;AAG/B,kBAAU,GAHqB;AAI/B,sBAAc,MAJiB;AAK/B,yBAAiB,KALc;AAM/B,kBAAU;AANqB,OAAA,EAO5B,WAP4B,CAAA,EAQ5B,cAR4B,CAAd,CAAnB;AAWA,MAAA,GAAG,CAAC,OAAJ,CAAY,WAAZ,CAAwB,MAAxB;AACA,MAAA,QAAQ,GAAG,GAAG,CAAC,OAAf;AACD;;AAED,WAAO,YAAA;AACL,UAAI,QAAJ,EAAc;AACZ,eAAO,QAAQ,CAAC,UAAhB,EAA4B;AAC1B,UAAA,QAAQ,CAAC,WAAT,CAAqB,QAAQ,CAAC,UAA9B;AACD;AACF;AACF,KAND;AAOD,GAhCD,EAgCG,CAAC,GAAD,EAAM,WAAN,EAAmB,cAAnB,CAhCH;AAkCA,SAAO,IAAA,CAAA,KAAA,EAAA;AAAK,IAAA,GAAG,EAAE;AAAV,GAAA,EAAa,KAAA,CAAb,CAAP;AACD,CAxCD;;AA0CA,eAAe,cAAf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport React from \"react\";\r\nvar CompanyProfile = function (props) {\r\n    var widgetProps = props.widgetProps, widgetPropsAny = props.widgetPropsAny;\r\n    var ref = React.createRef();\r\n    React.useEffect(function () {\r\n        var refValue;\r\n        if (ref.current) {\r\n            var script = document.createElement(\"script\");\r\n            script.src = \"https://s3.tradingview.com/external-embedding/\"\r\n                + \"embed-widget-symbol-profile.js\";\r\n            script.async = true;\r\n            script.type = \"text/javascript\";\r\n            script.innerHTML = JSON.stringify(__assign(__assign({ \"symbol\": \"NASDAQ:NVDA\", \"width\": 480, \"height\": 650, \"colorTheme\": \"dark\", \"isTransparent\": false, \"locale\": \"en\" }, widgetProps), widgetPropsAny));\r\n            ref.current.appendChild(script);\r\n            refValue = ref.current;\r\n        }\r\n        return function () {\r\n            if (refValue) {\r\n                while (refValue.firstChild) {\r\n                    refValue.removeChild(refValue.firstChild);\r\n                }\r\n            }\r\n        };\r\n    }, [ref, widgetProps, widgetPropsAny]);\r\n    return _jsx(\"div\", { ref: ref }, void 0);\r\n};\r\nexport default CompanyProfile;\r\n//# sourceMappingURL=CompanyProfile.js.map"]},"metadata":{},"sourceType":"module"}